import React, { useEffect, useState, useRef } from "react";
import { useNavigate } from "react-router-dom";
import { Target, ArrowLeft,User } from "lucide-react";
import Navbar from "./Navbar";
import { motion, AnimatePresence } from "framer-motion";
import {
  Car,
  Wrench,
  Shield,
  Users,
  Phone,
  Star,
  Award,
  Battery,
  MapPin,
  Globe,
  Briefcase,
  MessageCircle,
  Mail,
  CheckCircle,
  Volume2,
  VolumeX,
  Eye,
  Cpu,
  Coins,
  ShieldCheck, CalendarCheck2, ClipboardCheck, CheckCircle2, Zap

} from "lucide-react";

const HomePage = () => {
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [isMuted, setIsMuted] = useState(true); // tr·∫°ng th√°i mute/unmute
  const [selected, setSelected] = useState(null);
  const videoRef = useRef(null);
  const navigate = useNavigate();

  const user = {
    name: "Nguy·ªÖn VƒÉn A",
    avatar: "/user-avatar.png",
  };

  // H√†m scroll ƒë·∫øn section
  const scrollToSection = (id) => {
    const section = document.getElementById(id);
    if (section) {
      section.scrollIntoView({ behavior: "smooth" });
    }
  };


  const services = [
    {
      title: "B·∫£o d∆∞·ª°ng ƒë·ªãnh k·ª≥",
      icon: <Wrench className="w-12 h-12" />,
      img: "/baoduong.gif",
      desc: "Ki·ªÉm tra ƒë·ªãnh k·ª≥, thay d·∫ßu, l·ªçc gi√≥ v√† c√°c linh ki·ªán quan tr·ªçng gi√∫p xe ho·∫°t ƒë·ªông ·ªïn ƒë·ªãnh l√¢u d√†i.",
      direction: "right",
    },
    {
      title: "Ki·ªÉm tra pin",
      icon: <Battery className="w-12 h-12" />,
      img: "/battery.gif",
      desc: "ƒêo dung l∆∞·ª£ng, ki·ªÉm tra hi·ªáu su·∫•t s·∫°c/x·∫£ v√† ƒë·∫£m b·∫£o pin lu√¥n an to√†n khi v·∫≠n h√†nh.",
      direction: "left",
    },
    {
      title: "S·ª≠a ch·ªØa ƒë·ªông c∆°",
      icon: <Car className="w-12 h-12" />,
      img: "/fixing.gif",
      desc: "S·ª≠a ch·ªØa, b·∫£o tr√¨ v√† t·ªëi ∆∞u ƒë·ªông c∆° ƒëi·ªán gi√∫p xe v·∫≠n h√†nh m·∫°nh m·∫Ω v√† ti·∫øt ki·ªám nƒÉng l∆∞·ª£ng.",
      direction: "left",
    },
  ];

  // Toggle mute/unmute
  const toggleMute = () => {
    if (videoRef.current) {
      videoRef.current.muted = !videoRef.current.muted;
      setIsMuted(videoRef.current.muted);
    }
  };

  const handleBookingClick = () => {
    navigate("/booking"); // üëâ Chuy·ªÉn sang trang booking
  };


  return (
    
    <div className="min-h-screen bg-gray-50">

      <div>
      <Navbar />
      {/* c√°c section kh√°c c·ªßa homepage */}
    </div>

      {/* ====== THANH MENU ====== */}
      <header className="w-full bg-white/80 backdrop-blur-md shadow-md fixed top-0 left-0 z-50">
        <div className="max-w-7xl mx-auto px-3 py-3 flex justify-between items-center">
          {/* Logo */}
          <div className="flex items-center space-x-3 cursor-pointer">
            <div className="bg-gradient-to-r from-emerald-500 to-blue-500 p-2.5 rounded-xl shadow-md hover:scale-105 transition-transform">
              <Car className="w-9 h-9 text-white" />
            </div>
            <div>
              <h1 className="font-bold text-2xl text-gray-800 leading-tight">
                EV Care Pro
              </h1>
              <p className="text-sm text-gray-500 -mt-1">
                B·∫£o d∆∞·ª°ng xe ƒëi·ªán
              </p>

            </div>
          </div>

          {/* Menu */}
          <nav>
            <ul className="flex space-x-8 text-gray-700 font-semibold text-2xl">
              <li
                onClick={() => scrollToSection("gioi-thieu")}
                className="hover:text-blue-600 cursor-pointer"
              >
                Gi·ªõi thi·ªáu
              </li>
              <li
                onClick={() => scrollToSection("dich-vu")}
                className="hover:text-blue-600 cursor-pointer"
              >
                D·ªãch v·ª•
              </li>
              <li
                onClick={() => scrollToSection("bang-gia")}
                className="hover:text-blue-600 cursor-pointer"
              >
                B·∫£ng gi√°
              </li>
              <li
                onClick={() => scrollToSection("lien-he")}
                className="hover:text-blue-600 cursor-pointer"
              >
                Li√™n h·ªá
              </li>
              {/* <li
                onClick={() => scrollToSection("dat-lich")}
                className="hover:text-blue-600 cursor-pointer"
              >
                ƒê·∫∑t l·ªãch
              </li> */}
            </ul>
          </nav>

          {/* G√≥c ph·∫£i */}
          <div className="flex items-center space-x-3">
            {isLoggedIn ? (
              <>
                <img
                  src={user.avatar}
                  alt="User Avatar"
                  className="w-8 h-8 rounded-full border border-gray-300"
                />
                <span className="font-semibold text-gray-800">{user.name}</span>
                <button
                  onClick={() => setIsLoggedIn(false)}
                  className="text-red-500 hover:underline text-sm ml-2"
                >
                  ƒêƒÉng xu·∫•t
                </button>
              </>
            ) : (
              <button
                onClick={() => navigate("/login")}
                className="bg-blue-600 text-white px-5 py-4 rounded-lg hover:bg-blue-700 transition"
              >
                ƒêƒÉng nh·∫≠p
              </button>
            )}
          </div>
        </div>
      </header>

      {/* ====== N·ªòI DUNG ====== */}
      <main className="pt-24">
        {/* HERO Glassmorphism v·ªõi video n·ªÅn + CTA */}
        <section className="relative max-w-7xl mx-auto h-[500px] md:h-[600px] rounded-3xl overflow-hidden shadow-2xl">
          {/* Video n·ªÅn */}
          <video
            ref={videoRef}
            autoPlay
            loop
            muted
            playsInline
            className="absolute inset-0 w-full h-full object-cover"
          >
            <source src="/video.mp4" type="video/mp4" />
            Tr√¨nh duy·ªát c·ªßa b·∫°n kh√¥ng h·ªó tr·ª£ video.
          </video>

          {/* Overlay gradient ƒë·ªÉ video kh√¥ng b·ªã ch√≥i */}
          <div className="absolute inset-0 bg-gradient-to-tr from-black/60 via-black/30 to-transparent"></div>

          {/* Glassmorphism box */}
          <div className="relative z-10 flex items-center justify-center h-full">
            <div className=" border-white/30 rounded-3xl p-6 md:p-12 text-center max-w-3xl mx-6">
              <h1 className="text-3xl md:text-5xl font-bold text-white mb-6 drop-shadow-lg">
                B·∫Øt ƒë·∫ßu ngay h√¥m nay!
              </h1>
              <p className="text-base md:text-lg text-gray-200 mb-8 leading-relaxed">
                ƒê·∫∑t l·ªãch b·∫£o d∆∞·ª°ng ƒë·ªÉ xe ƒëi·ªán c·ªßa b·∫°n lu√¥n ho·∫°t ƒë·ªông{" "}
                <span className="font-semibold text-white">b·ªÅn b·ªâ</span>,{" "}
                <span className="font-semibold text-white">an to√†n</span> v√†{" "}
                <span className="font-semibold text-white">hi·ªáu qu·∫£</span>.
              </p>

              {/* CTA Buttons */}
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <button
                  onClick={handleBookingClick}
                  className="bg-gradient-to-r from-emerald-500 to-blue-600 hover:opacity-90 text-white px-10 py-4 rounded-full font-semibold shadow-lg transition-all"
                >
                  üöó ƒê·∫∑t l·ªãch ngay
                </button>
                <button
                  onClick={() => scrollToSection('gioi-thieu')}
                  className="bg-white/90 text-blue-600 px-10 py-4 rounded-full font-semibold shadow-md hover:bg-white transition-all"
                >
                  ‚ÑπÔ∏è T√¨m hi·ªÉu th√™m
                </button>
              </div>
            </div>
          </div>
        </section>




        {/* 2. Gi·ªõi thi·ªáu */}
        <section id="gioi-thieu" className="py-20 px-6 max-w-6xl mx-auto space-y-32">
          {/* Ph·∫ßn 1: Gi·ªõi thi·ªáu */}
          <div className="grid md:grid-cols-2 gap-16 items-center">
            {/* H√¨nh ·∫£nh */}
            <motion.div
              initial={{ opacity: 0, x: -80 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="flex justify-center"
            >
              <img
                src="/p1.jpg"
                alt="EV Care Pro"
                className="rounded-3xl shadow-2xl max-h-[420px] w-full object-cover hover:scale-105 transition-transform duration-500"
              />
            </motion.div>

            {/* N·ªôi dung */}
            <motion.div
              initial={{ opacity: 0, x: 80 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="text-center md:text-left space-y-6"
            >
              <h2 className="text-4xl font-bold text-gray-800">V·ªÅ Ch√∫ng T√¥i</h2>
              <p className="text-gray-600 leading-relaxed text-lg">
                <strong>EV Care Pro</strong> l√† ƒë∆°n v·ªã ti√™n phong t·∫°i Vi·ªát Nam trong lƒ©nh v·ª±c b·∫£o d∆∞·ª°ng v√† chƒÉm s√≥c xe ƒëi·ªán.
                V·ªõi h·ªá th·ªëng trung t√¢m hi·ªán ƒë·∫°i tr·∫£i d√†i kh·∫Øp c·∫£ n∆∞·ªõc, ch√∫ng t√¥i mang ƒë·∫øn d·ªãch v·ª•{" "}
                <span className="font-semibold text-gray-800">chuy√™n nghi·ªáp</span>,{" "}
                <span className="font-semibold text-gray-800">uy t√≠n</span> v√†{" "}
                <span className="font-semibold text-gray-800">t·∫≠n t√¢m</span>.
              </p>
              <p className="text-gray-600 leading-relaxed text-lg">
                ƒê·ªôi ng≈© k·ªπ thu·∫≠t vi√™n ƒë∆∞·ª£c ƒë√†o t·∫°o b√†i b·∫£n, k·∫øt h·ª£p c√πng{" "}
                <span className="font-semibold text-gray-800">c√¥ng ngh·ªá ti√™n ti·∫øn</span> gi√∫p xe ƒëi·ªán c·ªßa b·∫°n
                lu√¥n ho·∫°t ƒë·ªông <span className="font-semibold text-gray-800">b·ªÅn b·ªâ</span>,{" "}
                <span className="font-semibold text-gray-800">an to√†n</span> v√†{" "}
                <span className="font-semibold text-gray-800">hi·ªáu qu·∫£</span>.
              </p>
            </motion.div>
          </div>

          {/* Ph·∫ßn 2: S·ª© m·ªánh & T·∫ßm nh√¨n */}
          <div className="grid md:grid-cols-2 gap-16 items-center">
            {/* N·ªôi dung */}
            <motion.div
              initial={{ opacity: 0, x: -80 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="space-y-12"
            >
              {/* S·ª© m·ªánh */}
              <div className="space-y-4">
                <div className="flex items-center gap-4">
                  <div className="bg-blue-100 p-3 rounded-full">
                    <Target className="w-7 h-7 text-blue-600" />
                  </div>
                  <h3 className="text-2xl font-bold text-gray-800">S·ª© m·ªánh</h3>
                </div>
                <p className="text-gray-600 leading-relaxed text-lg">
                  Mang ƒë·∫øn d·ªãch v·ª• b·∫£o d∆∞·ª°ng xe ƒëi·ªán to√†n di·ªán, ƒë·∫£m b·∫£o{" "}
                  <span className="font-semibold text-gray-800">an to√†n</span>,{" "}
                  <span className="font-semibold text-gray-800">b·ªÅn b·ªâ</span> v√†{" "}
                  <span className="font-semibold text-gray-800">th√¢n thi·ªán v·ªõi m√¥i tr∆∞·ªùng</span>.
                </p>
              </div>

              {/* T·∫ßm nh√¨n */}
              <div className="space-y-4">
                <div className="flex items-center gap-4">
                  <div className="bg-green-100 p-3 rounded-full">
                    <Eye className="w-7 h-7 text-green-600" />
                  </div>
                  <h3 className="text-2xl font-bold text-gray-800">T·∫ßm nh√¨n</h3>
                </div>
                <p className="text-gray-600 leading-relaxed text-lg">
                  Tr·ªü th√†nh <span className="font-semibold text-gray-800">th∆∞∆°ng hi·ªáu s·ªë 1</span>
                  t·∫°i Vi·ªát Nam trong lƒ©nh v·ª±c chƒÉm s√≥c xe ƒëi·ªán, h∆∞·ªõng t·ªõi{" "}
                  <span className="font-semibold text-gray-800">chu·∫©n qu·ªëc t·∫ø</span>.
                </p>
              </div>
            </motion.div>

            {/* H√¨nh ·∫£nh */}
            <motion.div
              initial={{ opacity: 0, x: 80 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="flex justify-center"
            >
              <img
                src="/p2.jpg"
                alt="S·ª© m·ªánh & T·∫ßm nh√¨n"
                className="rounded-3xl shadow-2xl max-h-[420px] w-full object-cover hover:scale-105 transition-transform duration-500"
              />
            </motion.div>
          </div>
        </section>


        {/* 3. D·ªãch v·ª• */}
        <section id="dich-vu" className="bg-gray-50 py-20 px-6 relative">
          <div className="max-w-6xl mx-auto">
            <h2 className="text-4xl font-bold text-center mb-14 text-gray-800">
              D·ªãch v·ª• c·ªßa ch√∫ng t√¥i
            </h2>

            {/* Grid card */}
            <div className="grid md:grid-cols-2 gap-6">
              {/* C·ªôt tr√°i - ·∫£nh l·ªõn */}
              <div
                className="relative rounded-2xl overflow-hidden shadow-xl group cursor-pointer"
                onClick={() => setSelected(services[0])}
              >
                <img
                  src="/p3.jpg"
                  alt={services[0].title}
                  className="w-full h-[500px] object-cover group-hover:scale-105 transition-transform duration-500"
                />
                <div className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-6">
                  <h3 className="text-2xl font-semibold text-white">
                    {services[0].title}
                  </h3>
                </div>
              </div>

              {/* C·ªôt ph·∫£i - 2 ·∫£nh nh·ªè */}
              <div className="grid grid-rows-2 gap-6">
                {services.slice(1, 3).map((s, i) => {
                  // g√°n ·∫£nh c·ª©ng theo index
                  const images = ["/p4.jpg", "/p5.jpg"];
                  return (
                    <div
                      key={i}
                      className="relative rounded-2xl overflow-hidden shadow-xl group cursor-pointer"
                      onClick={() => setSelected(s)}
                    >
                      <img
                        src={images[i]} // l·∫•y ·∫£nh c·ª©ng theo th·ª© t·ª±
                        alt={s.title}
                        className="w-full h-[240px] object-cover group-hover:scale-105 transition-transform duration-500"
                      />
                      <div className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-4">
                        <h3 className="text-lg font-semibold text-white">{s.title}</h3>
                      </div>
                    </div>
                  );
                })}
              </div>
            </div>
          </div>

          {/* Overlay info khi click */}
          <AnimatePresence>
            {selected && (
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                exit={{ opacity: 0 }}
                transition={{ duration: 0.4 }}
                className="fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center z-50"
                onClick={() => setSelected(null)}
              >
                <motion.div
                  onClick={(e) => e.stopPropagation()}
                  initial={{ scale: 0.8, opacity: 0 }}
                  animate={{ scale: 1, opacity: 1 }}
                  exit={{ scale: 0.8, opacity: 0 }}
                  transition={{ duration: 0.4 }}
                  className="bg-white flex flex-col md:flex-row items-center text-center md:text-left p-8 md:p-12 shadow-2xl rounded-2xl relative max-w-4xl"
                >
                  {/* N√∫t Back */}
                  <button
                    type="button"
                    onClick={() => setSelected(null)}
                    className="absolute top-6 left-6 flex items-center gap-2 text-gray-500 hover:text-gray-800 transition"
                  >
                    <ArrowLeft className="w-5 h-5" />
                    Quay l·∫°i
                  </button>

                  {/* N·ªôi dung d·ªãch v·ª• */}
                  <img
                    src={selected.img}
                    alt={selected.title}
                    className="w-64 h-64 object-contain mb-6 md:mb-0 md:mr-10 rounded-xl shadow"
                  />
                  <div>
                    <h3 className="text-3xl font-bold mb-4 text-gray-800">{selected.title}</h3>
                    <p className="text-gray-600 leading-relaxed max-w-xl">
                      {selected.desc}
                    </p>
                  </div>
                </motion.div>
              </motion.div>
            )}
          </AnimatePresence>
        </section>


        {/* 4. L·ª£i √≠ch */}
        <section className="bg-gradient-to-b from-gray-50 to-white w-full py-20 px-6">
          <h2 className="text-4xl font-bold text-center mb-4 text-gray-900">
            T·∫°i sao ch·ªçn <span className="text-blue-600">EV Care Pro</span>?
          </h2>
          <p className="text-center text-gray-500 mb-12">
            D·ªãch v·ª• chuy√™n nghi·ªáp ‚Äì minh b·∫°ch ‚Äì t·∫≠n t√¢m.
          </p>

          <div className="grid md:grid-cols-4 sm:grid-cols-2 gap-8 max-w-6xl mx-auto text-center">
            {[
              { title: "C√¥ng ngh·ªá hi·ªán ƒë·∫°i", icon: <Cpu className="w-10 h-10 text-blue-600 mx-auto" /> },
              { title: "K·ªπ thu·∫≠t vi√™n chuy√™n nghi·ªáp", icon: <Wrench className="w-10 h-10 text-blue-600 mx-auto" /> },
              { title: "Gi√° c·∫£ minh b·∫°ch", icon: <Coins className="w-10 h-10 text-blue-600 mx-auto" /> },
              { title: "B·∫£o h√†nh uy t√≠n", icon: <ShieldCheck className="w-10 h-10 text-blue-600 mx-auto" /> },
            ].map((b, i) => (
              <div
                key={i}
                className="p-8 bg-white rounded-2xl border border-gray-100 shadow-md hover:shadow-xl transition-all duration-300 hover:-translate-y-2"
              >
                <div className="mb-4">{b.icon}</div>
                <h3 className="text-xl font-semibold text-gray-900 mb-2">
                  {b.title}
                </h3>
                <p className="text-gray-600">Cam k·∫øt mang l·∫°i gi√° tr·ªã th·∫≠t.</p>
              </div>
            ))}
          </div>
        </section>
        {/* 5. Quy tr√¨nh */}
        <section className="bg-gradient-to-b from-white to-gray-50 py-20 px-6">
          <div className="max-w-6xl mx-auto text-center">
            <h2 className="text-4xl font-bold text-gray-900 mb-4">
              Quy tr√¨nh <span className="text-blue-600">d·ªãch v·ª•</span>
            </h2>
            <p className="text-gray-500 mb-16">
              Ch√∫ng t√¥i ƒë·∫£m b·∫£o tr·∫£i nghi·ªám chuy√™n nghi·ªáp ‚Äì nhanh ch√≥ng ‚Äì minh b·∫°ch.
            </p>

            <div className="grid md:grid-cols-4 sm:grid-cols-2 gap-10">
              {[
                {
                  title: "ƒê·∫∑t l·ªãch",
                  desc: "ƒê·∫∑t l·ªãch tr·ª±c tuy·∫øn ho·∫∑c qua hotline, nhanh ch√≥ng v√† ti·ªán l·ª£i.",
                  icon: <CalendarCheck2 className="w-12 h-12 text-blue-600 mx-auto" />,
                },
                {
                  title: "Ti·∫øp nh·∫≠n",
                  desc: "Nh√¢n vi√™n ti·∫øp nh·∫≠n v√† ghi nh·∫≠n y√™u c·∫ßu d·ªãch v·ª• c·ªßa b·∫°n.",
                  icon: <ClipboardCheck className="w-12 h-12 text-blue-600 mx-auto" />,
                },
                {
                  title: "Ki·ªÉm tra",
                  desc: "K·ªπ thu·∫≠t vi√™n ki·ªÉm tra, t∆∞ v·∫•n v√† ti·∫øn h√†nh b·∫£o d∆∞·ª°ng.",
                  icon: <Wrench className="w-12 h-12 text-blue-600 mx-auto" />,
                },
                {
                  title: "Ho√†n t·∫•t",
                  desc: "B√†n giao xe, ki·ªÉm tra ch·∫•t l∆∞·ª£ng v√† b·∫£o h√†nh minh b·∫°ch.",
                  icon: <CheckCircle2 className="w-12 h-12 text-blue-600 mx-auto" />,
                },
              ].map((step, i) => (
                <div
                  key={i}
                  className="relative p-10 bg-white rounded-2xl shadow-md border border-gray-100 transition-all duration-300 hover:-translate-y-2 hover:shadow-xl"
                >
                  <div className="flex flex-col items-center">
                    <div className="mb-4">{step.icon}</div>
                    <h3 className="text-xl font-semibold text-gray-900 mb-2">{step.title}</h3>
                    <p className="text-gray-600 text-sm">{step.desc}</p>
                  </div>

                  {/* s·ªë th·ª© t·ª± tr√≤n ·ªü g√≥c tr√™n */}
                  <span className="absolute -top-4 -left-4 bg-blue-600 text-white font-semibold w-10 h-10 flex items-center justify-center rounded-full shadow-md">
                    {i + 1}
                  </span>
                </div>
              ))}
            </div>
          </div>
        </section>


        {/* 6. B·∫£ng gi√° d·ªãch v·ª• */}
        <section id="bang-gia" className="py-20 px-6 bg-gray-50">
          <div className="max-w-6xl mx-auto">
            <h2 className="text-4xl font-bold text-center text-gray-900 mb-4">
              Ch·ªçn d·ªãch v·ª•
            </h2>
            <p className="text-center text-gray-500 mb-14">
              Ch·ªçn c√°c d·ªãch v·ª• b·∫£o d∆∞·ª°ng b·∫°n c·∫ßn cho xe c·ªßa m√¨nh
            </p>

            <div className="grid sm:grid-cols-2 lg:grid-cols-2 gap-8">
              {[
                {
                  name: "Ki·ªÉm tra pin",
                  desc: "Ki·ªÉm tra t√¨nh tr·∫°ng pin, dung l∆∞·ª£ng v√† hi·ªáu su·∫•t s·∫°c",
                  price: "500.000 ‚Ç´",
                  time: "60 ph√∫t",
                  icon: <Battery className="w-6 h-6 text-green-600" />,
                  iconBg: "bg-green-100",
                },
                {
                  name: "B·∫£o d∆∞·ª°ng ƒë·ªông c∆°",
                  desc: "Ki·ªÉm tra v√† b·∫£o d∆∞·ª°ng h·ªá th·ªëng ƒë·ªông c∆° ƒëi·ªán",
                  price: "800.000 ‚Ç´",
                  time: "90 ph√∫t",
                  icon: <Zap className="w-6 h-6 text-blue-600" />,
                  iconBg: "bg-blue-100",
                },
                {
                  name: "Ki·ªÉm tra phanh",
                  desc: "Ki·ªÉm tra h·ªá th·ªëng phanh v√† thay m√° phanh n·∫øu c·∫ßn",
                  price: "300.000 ‚Ç´",
                  time: "45 ph√∫t",
                  icon: <ShieldCheck className="w-6 h-6 text-red-600" />,
                  iconBg: "bg-red-100",
                },
                {
                  name: "B·∫£o d∆∞·ª°ng t·ªïng qu√°t",
                  desc: "B·∫£o d∆∞·ª°ng to√†n di·ªán t·∫•t c·∫£ h·ªá th·ªëng c·ªßa xe",
                  price: "1.200.000 ‚Ç´",
                  time: "120 ph√∫t",
                  icon: <Wrench className="w-6 h-6 text-yellow-600" />,
                  iconBg: "bg-yellow-100",
                },
              ].map((s, i) => (
                <div
                  key={i}
                  className="flex flex-col p-8 bg-white rounded-2xl shadow-sm hover:shadow-md transition-all duration-300 border border-gray-100"
                >
                  <div className="flex items-start gap-4">
                    <div className={`p-3 rounded-xl ${s.iconBg}`}>{s.icon}</div>
                    <div>
                      <h3 className="text-xl font-semibold text-gray-900">{s.name}</h3>
                      <p className="text-gray-500 text-sm mt-1">{s.desc}</p>
                    </div>
                  </div>

                  <div className="mt-6 flex items-center justify-between">
                    <div>
                      <p className="text-2xl font-bold text-green-700">{s.price}</p>
                    </div>
                    <p className="text-gray-500 text-sm">{s.time}</p>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>

        {/* 8. Gallery */}
        <section className="py-20 px-6 bg-gray">
          <h2 className="text-3xl font-bold text-center mb-12 text-gray-800">
            H√¨nh ·∫£nh trung t√¢m
          </h2>
          <div className="grid md:grid-cols-3 gap-6 max-w-6xl mx-auto">
            {["/coso1.jpg", "/coso2.jpg", "/coso.jpg"].map((img, i) => (
              <img
                key={i}
                src={img}
                alt="Garage"
                className="rounded-lg shadow hover:scale-105 transition-transform"
              />
            ))}
          </div>
        </section>

        {/* 9. ƒê·ªôi ng≈© */}
        <section className="bg-gray-50 py-24 px-6">
          <div className="max-w-6xl mx-auto text-center">
            <h2 className="text-4xl font-bold text-gray-900 mb-4">
              ƒê·ªôi ng≈© k·ªπ thu·∫≠t vi√™n
            </h2>
            <p className="text-gray-500 mb-16 text-lg">
              Nh·ªØng chuy√™n gia t·∫≠n t√¢m v√† ƒë∆∞·ª£c ƒë√†o t·∫°o b√†i b·∫£n, lu√¥n s·∫µn s√†ng h·ªó tr·ª£ b·∫°n.
            </p>

            <div className="grid sm:grid-cols-2 md:grid-cols-4 gap-10">
              {[
                { name: "Anh Tu·∫•n", role: "K·ªπ thu·∫≠t vi√™n tr∆∞·ªüng", img: "/p6.png" },
                { name: "Minh Khoa", role: "Chuy√™n vi√™n ƒëi·ªán ‚Äì pin", img: "/p6.png" },
                { name: "H·ªØu Ph√∫c", role: "Chuy√™n vi√™n b·∫£o d∆∞·ª°ng", img: "/p6.png" },
                { name: "VƒÉn Nam", role: "K·ªπ thu·∫≠t vi√™n c∆° kh√≠", img: "/p6.png" },
              ].map((member, i) => (
                <div
                  key={i}
                  className="group bg-white rounded-2xl shadow-sm hover:shadow-lg transition-all duration-300 p-8 flex flex-col items-center"
                >
                  <div className="relative">
                    <img
                      src={member.img}
                      alt={member.name}
                      className="w-28 h-28 rounded-full object-cover border-4 border-white shadow-md group-hover:scale-105 transition-transform duration-300"
                    />
                    <div className="absolute inset-0 rounded-full bg-blue-100 opacity-0 group-hover:opacity-20 transition-opacity duration-300"></div>
                  </div>
                  <h3 className="text-xl font-semibold mt-5 text-gray-900">
                    {member.name}
                  </h3>
                  <p className="text-gray-500 text-sm">{member.role}</p>
                </div>
              ))}
            </div>
          </div>
        </section>


        {/* 10. Testimonials */}
        <section className="py-24 px-6 bg-gray-50">
          <div className="max-w-6xl mx-auto text-center">
            <h2 className="text-4xl font-bold text-gray-900 mb-4">
              Kh√°ch h√†ng n√≥i g√¨?
            </h2>
            <p className="text-gray-500 mb-16 text-lg">
              C·∫£m nh·∫≠n t·ª´ nh·ªØng kh√°ch h√†ng ƒë√£ tin t∆∞·ªüng v√† s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i.
            </p>

            <div className="grid md:grid-cols-3 gap-10">
              {[
                {
                  quote: "Xe t√¥i lu√¥n trong t√¨nh tr·∫°ng t·ªët nh·ªù EV Care Pro!",
                  name: "Nguy·ªÖn VƒÉn Minh",
                  role: "Ch·ªß xe VinFast VF8",
                  img: "/p6.png",
                },
                {
                  quote: "D·ªãch v·ª• t·∫≠n t√¢m v√† nhanh ch√≥ng, r·∫•t h√†i l√≤ng.",
                  name: "Tr·∫ßn Th·ªã Mai",
                  role: "Kh√°ch h√†ng th√¢n thi·∫øt",
                  img: "/p6.png",
                },
                {
                  quote: "K·ªπ thu·∫≠t vi√™n chuy√™n nghi·ªáp, gi·∫£i th√≠ch r√µ r√†ng t·ª´ng b∆∞·ªõc.",
                  name: "L√™ Quang Huy",
                  role: "Ch·ªß xe EV CityCar",
                  img: "/p6.png",
                },
              ].map((t, i) => (
                <div
                  key={i}
                  className="bg-white rounded-2xl shadow-sm hover:shadow-lg transition-all duration-300 p-8 flex flex-col items-center text-center relative"
                >
                  <div className="absolute -top-5 bg-blue-100 text-blue-500 w-10 h-10 rounded-full flex items-center justify-center text-2xl font-serif">
                    ‚Äú
                  </div>
                  <p className="italic text-gray-700 mt-6 mb-8 leading-relaxed">
                    {t.quote}
                  </p>
                  <div className="flex flex-col items-center">
                    <img
                      src={t.img}
                      alt={t.name}
                      className="w-16 h-16 rounded-full object-cover border-2 border-blue-100 shadow-sm mb-3"
                    />
                    <h4 className="font-semibold text-gray-900">{t.name}</h4>
                    <p className="text-sm text-gray-500">{t.role}</p>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>

        {/* 17. Th·ªëng k√™ */}
        <section className="py-24 px-6 bg-gradient-to-br from-gray-50 to-gray-100 text-center relative overflow-hidden">
          <div className="absolute inset-0 bg-[radial-gradient(circle_at_center,_rgba(59,130,246,0.06)_0%,_transparent_70%)]"></div>

          <h2 className="text-4xl font-bold mb-16 text-gray-900 relative z-10">
            Th·ªëng k√™ n·ªïi b·∫≠t
          </h2>

          {/* Logic ƒë·∫øm s·ªë */}
          {(() => {
            const stats = [
              { label: "Kh√°ch h√†ng", value: 50000, suffix: "+" },
              { label: "Trung t√¢m", value: 120, suffix: "+" },
              { label: "K·ªπ thu·∫≠t vi√™n", value: 500, suffix: "+" },
              { label: "NƒÉm kinh nghi·ªám", value: 10, suffix: "+" },
            ];

            const [counts, setCounts] = useState(stats.map(() => 0));

            useEffect(() => {
              const duration = 2000;
              const interval = 20;
              const steps = duration / interval;

              stats.forEach((stat, index) => {
                let current = 0;
                const increment = stat.value / steps;

                const counter = setInterval(() => {
                  current += increment;
                  if (current >= stat.value) {
                    current = stat.value;
                    clearInterval(counter);
                  }
                  setCounts((prev) => {
                    const updated = [...prev];
                    updated[index] = Math.floor(current);
                    return updated;
                  });
                }, interval);
              });
            }, []);

            return (
              <div className="grid md:grid-cols-4 gap-10 max-w-6xl mx-auto relative z-10">
                {stats.map((item, i) => (
                  <div
                    key={i}
                    className="p-8 bg-white/80 backdrop-blur-sm rounded-2xl shadow-sm hover:shadow-lg transition-all duration-300"
                  >
                    <h3 className="text-5xl font-extrabold text-blue-600 drop-shadow-sm transition-transform duration-300 hover:scale-110">
                      {counts[i].toLocaleString()}
                      {item.suffix}
                    </h3>
                    <p className="text-gray-600 mt-3 text-lg font-medium">
                      {item.label}
                    </p>
                  </div>
                ))}
              </div>
            );
          })()}
        </section>

        {/* 18. Chi nh√°nh & B·∫£n ƒë·ªì */}
        <section className="bg-gray-50 py-24 px-6 text-center relative overflow-hidden">
          <div className="max-w-6xl mx-auto relative z-10">
            <h2 className="text-4xl font-bold mb-4 text-gray-900">
              H·ªá th·ªëng chi nh√°nh
            </h2>
            <p className="text-gray-600 mb-12 text-lg">
              Tr·∫£i d√†i kh·∫Øp c·∫£ n∆∞·ªõc v·ªõi h∆°n <span className="font-semibold text-blue-600">120 chi nh√°nh</span> s·∫µn s√†ng ph·ª•c v·ª• b·∫°n.
            </p>

            {/* Danh s√°ch chi nh√°nh ƒë·∫°i di·ªán */}
            <div className="grid sm:grid-cols-2 md:grid-cols-3 gap-8 mb-16">
              {[
                { city: "H√† N·ªôi", center: "EV Care Pro - Tr·∫ßn Duy H∆∞ng" },
                { city: "TP. H·ªì Ch√≠ Minh", center: "EV Care Pro - Qu·∫≠n 7" },
                { city: "ƒê√† N·∫µng", center: "EV Care Pro - H·∫£i Ch√¢u" },
                { city: "C·∫ßn Th∆°", center: "EV Care Pro - Ninh Ki·ªÅu" },
                { city: "H·∫£i Ph√≤ng", center: "EV Care Pro - L√™ Ch√¢n" },
                { city: "Nha Trang", center: "EV Care Pro - Tr·∫ßn Ph√∫" },
              ].map((branch, i) => (
                <div
                  key={i}
                  className="bg-white rounded-xl shadow-sm hover:shadow-md transition-all p-6 text-left"
                >
                  <h3 className="text-xl font-semibold text-gray-800">
                    {branch.city}
                  </h3>
                  <p className="text-gray-500 mt-1">{branch.center}</p>
                </div>
              ))}
            </div>

            {/* Google Map */}
            <div className="relative w-full h-96">
              <iframe
                className="w-full h-full rounded-2xl shadow-lg border border-gray-200"
                src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3919..."
                title="Google Maps"
                loading="lazy"
                referrerPolicy="no-referrer-when-downgrade"
              ></iframe>
            </div>
          </div>
        </section>

        {/* 21. Newsletter */}
        <section className="py-20 px-6 bg-gradient-to-r from-indigo-500 to-blue-600 text-white text-center">
          <h2 className="text-3xl font-bold mb-6">ƒêƒÉng k√Ω nh·∫≠n tin</h2>
          <p className="mb-6">Nh·∫≠n ngay ∆∞u ƒë√£i v√† tin t·ª©c m·ªõi nh·∫•t t·ª´ EV Care.</p>
          <div className="flex justify-center">
            <input
              type="email"
              placeholder="Nh·∫≠p email c·ªßa b·∫°n"
              className="px-4 py-2 rounded-l-lg text-gray-800 w-64"
            />
            <button className="bg-green-500 px-6 py-2 rounded-r-lg font-semibold">
              ƒêƒÉng k√Ω
            </button>
          </div>
        </section>

        {/* 25. Footer */}
        <footer className="bg-gray-900 text-gray-300 py-16">
          <div className="max-w-7xl mx-auto px-6 grid md:grid-cols-4 gap-12 text-left">
            {/* C·ªôt 1 - Logo & Gi·ªõi thi·ªáu */}
            <div>
              <h3 className="text-2xl font-bold text-white mb-4">EV Care Pro</h3>
              <p className="text-sm leading-relaxed">
                H·ªá th·ªëng d·ªãch v·ª• b·∫£o d∆∞·ª°ng v√† s·ª≠a ch·ªØa xe ƒëi·ªán h√†ng ƒë·∫ßu Vi·ªát Nam.
                Uy t√≠n - Minh b·∫°ch - Chuy√™n nghi·ªáp.
              </p>
            </div>

            {/* C·ªôt 2 - Ch√≠nh s√°ch */}
            <div>
              <h4 className="text-lg font-semibold text-white mb-4">Ch√≠nh s√°ch</h4>
              <ul className="space-y-2">
                <li><a href="#" className="hover:text-blue-400">Ch√≠nh s√°ch b·∫£o m·∫≠t</a></li>
                <li><a href="#" className="hover:text-blue-400">ƒêi·ªÅu kho·∫£n d·ªãch v·ª•</a></li>
                <li><a href="#" className="hover:text-blue-400">Ch√≠nh s√°ch b·∫£o h√†nh</a></li>
                <li><a href="#" className="hover:text-blue-400">H·ªèi ƒë√°p (FAQ)</a></li>
              </ul>
            </div>

            {/* C·ªôt 3 - ƒê·ªëi t√°c */}
            <div>
              <h4 className="text-lg font-semibold text-white mb-4">ƒê·ªëi t√°c</h4>
              <ul className="space-y-2">
                <li><a href="#" className="hover:text-blue-400">VinFast</a></li>
                <li><a href="#" className="hover:text-blue-400">Tesla</a></li>
                <li><a href="#" className="hover:text-blue-400">EVN</a></li>
                <li><a href="#" className="hover:text-blue-400">Shell Recharge</a></li>
              </ul>
            </div>

            {/* C·ªôt 4 - Li√™n h·ªá */}
            <div>
              <h4 className="text-lg font-semibold text-white mb-4">Li√™n h·ªá</h4>
              <ul className="space-y-2 text-sm">
                <li>üìç 123 Tr·∫ßn Duy H∆∞ng, H√† N·ªôi</li>
                <li>üìû 0123 456 789</li>
                <li>üìß support@evcarepro.vn</li>
              </ul>
              <div className="flex space-x-4 mt-4">
                <a href="#" className="hover:text-blue-400">üåê</a>
                <a href="#" className="hover:text-blue-400">üëç</a>
                <a href="#" className="hover:text-blue-400">üê¶</a>
                <a href="#" className="hover:text-blue-400">üíº</a>
              </div>
            </div>
          </div>

          {/* D√≤ng cu·ªëi */}
          <div className="border-t border-gray-700 mt-12 pt-6 text-center text-sm text-gray-500">
            <p>¬© 2025 EV Care Pro. M·ªçi quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
            <p className="mt-1">Designed by <span className="text-gray-300 font-semibold">RTY</span></p>
          </div>
        </footer>

      </main>
    </div>
  );
};

export default HomePage;
